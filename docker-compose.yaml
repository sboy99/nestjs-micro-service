version: '3.8'

services:
  # micro services
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    container_name: nest_auth
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3001:3001
    env_file:
      - ./apps/auth/.env
    networks:
      - nestjs_network
    volumes:
      - .:/usr/src/app

  reservation:
    build:
      context: .
      dockerfile: ./apps/reservation/Dockerfile
      target: development
    command: pnpm run start:dev reservation
    container_name: nest_reservation
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3000:3000
    env_file:
      - ./apps/reservation/.env
    networks:
      - nestjs_network
    volumes:
      - .:/usr/src/app

  payment:
    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile
      target: development
    command: pnpm run start:dev payment
    container_name: nest_payment
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./apps/payment/.env
    networks:
      - nestjs_network
    volumes:
      - .:/usr/src/app

  notification:
    build:
      context: .
      dockerfile: ./apps/notification/Dockerfile
      target: development
    command: pnpm run start:dev notification
    container_name: nest_notification
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3005:3005
    env_file:
      - ./apps/notification/.env
    networks:
      - nestjs_network
    volumes:
      - .:/usr/src/app

  # Infra
  db:
    image: mongo
    container_name: nest_mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - nestjs_vol:/data/db
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - nestjs_network

  rabbitmq:
    image: rabbitmq
    container_name: nest_rabbitmq
    restart: always
    ports:
      - '5672:5672'
    networks:
      - nestjs_network
    volumes:
      - rabbitmq_vol:/var/lib/rabbitmq
  # Chache service
  # cache:
  #   image: redis
  #   container_name: redis
  #   restart: always
  #   ports:
  #     - '6379:6379'
  #   volumes:
  #     - buidl_cache:/data
# Network
networks:
  nestjs_network:
    name: nestjs_network

# Volume
volumes:
  nestjs_vol:
  rabbitmq_vol:
  # buidl_cache:
